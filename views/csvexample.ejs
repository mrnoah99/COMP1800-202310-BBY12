<!-- THE JS CODE ON THIS PAGE WAS NOT WRITTEN BY ME! Sourced from https://github.com/evanplaice/jquery-csv/ And the basic layout
    of HTML used in conjunction with that code was made by them, and edited by me to work better with our app.

    This is an example to show how we are loading in .csv files and converting them into .json and using that to display the
information inside. For datasets that come with a .json variant, we will use that instead because this is tedious as hell. -->

<%- include("templates/header") %>
    <link href="https://fonts.googleapis.com/css?family=Lato|Roboto|Source+Code+Pro" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/monokai.min.css">
    </head>
    <%- include("templates/navbar") %>
        <div id="search-query" style="display: none;"><%= search_query %></div>
        <div class='text-center' id='game-list' style="font-size: 20pt;">Search Results for "<%= search_query %>"</div>
        <div id="container"><!-- This contains all of the stuff used in the test. In a real page that is used, we likely won't
        use this. -->
            <section id="content">
                <h2>Input</h2>
                <textarea id="input" style="height: 190px; width: 250px;"><%- include("../public/datasets/csv_test.csv") %></textarea>
                <!-- The textarea above is used to store the dataset contents. Make sure when you do the include() that you
                have the file extension (.csv) on the end of the file name, otherwise node will look for an ejs file with that name.
                Another thing that we will do in the real pages is hide this so it doesn't appear on the page, and instead just show the
                results.-->
                <input id="run" type="button" value="Run" /> <!-- We won't be using a button in a real page, this is just useful for
                testing purposes in case if the onload attempt at loading the results fails, or if there are errors to fix.-->
                <hr />
                <h2>Result</h2>
                <div id="result"></div> <!-- This is where the code places the search results. By search results I mean what we, the
                developers, are looking for, not neccessarily what the user is searching for, although those two will line up most of
                the time. -->
            </section>
        </div>

        <script src="http://code.jquery.com/jquery-3.3.1.slim.js"
            integrity="sha256-fNXJFIlca05BIO2Y5zh1xrShK3ME+/lYZ0j+ChxX2DA=" crossorigin="anonymous"></script>
        <script src="/js/jquery.csv.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/highlight.min.js"></script>
        <script>
            // enable syntax highlighting
            hljs.initHighlightingOnLoad();

            let searchQuery = document.getElementById("search-query").innerHTML; // The query that we are looking for in the .csv

            $(document).ready(() => { // Calls parse() when the page loads, which should work most of the time.
                parse();
            });

            $('#run').bind('click', function () { // This is just for the button that we won't use to call parse().
                parse();
            });

            function parse() { // Gets the input from the html, and then calls the custom method to convert from .csv to .json, and
                // puts that into the result element.
                const input = $('#input').val();
                const data = $.csv.toObjects(input);
                $('#result').empty();
                let result = JSON.stringify(data, null, 2);
                document.getElementById("result").innerHTML = result;
                // This would require a little bit of changing to work with what we need. I will work on it some more when I work on
                // the search function.
            }
        </script>
<%- include("templates/footer") %>